local adview = require "defads.shared.adview"
local appnext = require "defads.appnext.appnext"

function init(self)
end

function final(self)
	self.ad.destroy()
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show_interstitial") then
		assert(message.android_id, "You must provide an Android placement id as 'android_id'")
		assert(message.ios_id, "You must provide an iOS placement id as 'ios_id'")
		self.ad = adview.create()
		if not self.ad then
			msg.post(sender, adview.MSG_AD_ERROR)
			return
		end

		local html = appnext.interstitial(self.ad.id, message.android_id, message.ios_id)
		self.ad.show(html, function(result)
			if result.status == adview.RESULT_ERROR then
				msg.post(sender, adview.MSG_AD_ERROR)
			elseif result.status == adview.RESULT_CLOSED then
				msg.post(sender, adview.MSG_AD_CLOSED)
			end
		end)
	elseif message_id == hash("show_video") then
		assert(message.android_id, "You must provide an Android placement id as 'android_id'")
		assert(message.ios_id, "You must provide an iOS placement id as 'ios_id'")
		self.ad = adview.create()
		if not self.ad then
			msg.post(sender, adview.MSG_AD_ERROR)
			return
		end

		local html = appnext.video(self.ad.id, message.android_id, message.ios_id)
		self.ad.show(html, function(result)
			if result.status == adview.RESULT_ERROR then
				msg.post(sender, adview.MSG_AD_ERROR)
			elseif result.status == adview.RESULT_CLOSED then
				msg.post(sender, adview.MSG_AD_CLOSED)
			end
		end)
	end
end
